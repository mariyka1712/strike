.\" generated with Ronn/v0.7.3
.\" http://github.com/rtomayko/ronn/tree/0.7.3
.
.TH "BAKE" "1" "December 2012" "" ""
.
.SH "NAME"
\fBbake\fR \- make for \fBbash\fR
.
.SH "SYNOPSIS"
\fBbake\fR command [\fIoptions\fR\.\.\.]
.
.br
.
.SH "DESCRIPTION"
\fBbake\fR is \fBmake\fR for \fBbash\fR programs\. The \fBbake\fR program does not define any tasks by default but some common tasks are available in the \fBmodules/tasks\fR directory and can be included in a tasks file using \fBrequire\fR, for example:
.
.IP "" 4
.
.nf

require \'tasks/clean\';
require \'tasks/list\';
.
.fi
.
.IP "" 0
.
.SH "FILES"
The bake(1) program looks for a \fBtasks\fR file in the current working directory and maps commands to the task methods found in the tasks file\. A command is considered to be the first option passed to the \fBbake\fR executable, any other options specified on the command line are passed to the corresponding task method\.
.
.SH "ENVIRONMENT"
The following variables are available to each command method:
.
.TP
\fBroot\fR
The directory where the \fBtasks\fR file is located\.
.
.TP
\fBtarget\fR
A temporary \fBtarget\fR directory corresponding to \fB${root}/target\fR\.
.
.TP
\fBtasks\fR
The file system path to the tasks file, eg: \fB${root}/tasks\fR\.
.
.SH "EXIT CODES"
.
.TP
\fB1\fR
No tasks file available in the current working directory\.
.
.TP
\fB2\fR
No tasks command method available\.
.
.TP
\fB3\fR
The task method invocation exited with a non\-zero exit code\.
.
.SH "BUGS"
\fBbake\fR is written in bash and depends upon \fBbash\fR >= 4\.
.
.SH "COPYRIGHT"
\fBbake\fR is copyright (c) 2012 muji \fIhttp://xpm\.io\fR
.
.SH "SEE ALSO"
strike(1), boilerplate(3), require(3), method(3), http(1), bake(1), rest(1)
