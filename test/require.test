# test for absolute require
function test.require.absolute {
	local dir=`dirname ${BASH_SOURCE[0]}`;
	fs.path.expand "$dir";
	dir="$_result";
	require "${dir}/modules/say";
	assert.eq "0" "$?";
	assert.loaded.module;
}

# test for module search path lookup
function test.require.lookup {
	require "string";
	assert.eq "0" "$?";
	local methods=( $( method.list | egrep '^string' ) );
	assert.gt "1" "${#methods[@]}";
}

# test for relative require using: ./
function test.require.relative {
	require "./modules/say";
	assert.eq "0" "$?";
	assert.loaded.module;
}

# test for relative require using: ../
function test.require.relative.parent {
	require "../test/modules/say";
	assert.eq "0" "$?";
	assert.loaded.module;
}

# test for a non-existent module
function test.require.nonexistent {
	require "nonexistent" &
	wait %%;
	assert.eq "1" "$?";
}

function assert.loaded.module {
	local methods=( $( method.list | grep "say" ) );
	methods="${methods[@]}";
	assert.equal "say say.goodbye say.hello" "${methods}";

	# clean up declared methods
	method.remove "say";
	method.remove "say.goodbye";
	method.remove "say.hello";
}