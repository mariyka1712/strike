#!/usr/bin/env bash

######################################################################
#
#	BOILERPLATE
#
######################################################################
console_print_program_prefix="off";
export exedir;
function boilerplate {
	local src="${BASH_SOURCE[0]}"
	exedir="$( dirname "$src" )"
	while [ -h "$src" ]
		do 
			src="$(readlink "$src")";
			[[ $src != /* ]] && src="$exedir/$src";
			exedir="$( cd -P "$( dirname "$src"  )" && pwd )";
	done
	exedir="$( cd -P "$( dirname "$src" )" && pwd )";
	unset src;
	source "$exedir/../../lib/shared" "$@";
}
boilerplate "$@";
######################################################################

process.use 'strict';
require.once 'assert';

# let assert(3) know if this test
# is being run standalone or as
# part of a task-test(7) test suite
assert.parse "$@";

function pidfile {
	# switch on pid file usage
	# must be done after the signal assertions!
	process.pid.use!;
	# assert that we have a pid file
	process.pid.file;
	assert.file.exists? "$_result";
	process.pid?;
	assert.eq "0" "$?";
	
	# switch off pid file usage
	process.pid.use! off;
	# assert that the pid file does not exist
	process.pid.file;
	assert.file.exists! "$_result";
	
	assert.summary;	
}

pidfile "$@";
exit 0;