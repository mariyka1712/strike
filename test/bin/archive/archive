#! /usr/bin/env bash

set -o errtrace;
set -o errexit;
set -o nounset;

######################################################################
#
#	BOILERPLATE
#
######################################################################
console_print_program_prefix="off";
declare -gx exedir;
function boilerplate {
	local src="${BASH_SOURCE[0]}"
	exedir="$( dirname "$src" )"
	while [ -h "$src" ]
		do 
			src="$(readlink "$src")";
			[[ $src != /* ]] && src="$exedir/$src";
			exedir="$( cd -P "$( dirname "$src"  )" && pwd )";
	done
	exedir="$( cd -P "$( dirname "$src" )" && pwd )";
	unset src;
	source "$exedir/../../../lib/shared" "$@";
}
boilerplate "$@";
######################################################################

process.use strict;

require.once 'assert';
require.once 'tasks/archive';

# let assert(3) know if this test
# is being run standalone or as
# part of a task-test(7) test suite
assert.parse "$@";

# tests for task-archive(7)
function test.archive {
	# invalid command
	# tasks.archive --x tar lipsum.txt;
	
	# invalid archive type
	# tasks.archive -x rar lipsum.txt;	
	
	# attempt to extract a non-existent archive
	# tasks.archive -x tar lipsum.txt.tar.gz;
	
	# absolute file path spec
	tasks.archive -t /etc/lipsum.zip;
	
	# relative specifications
	
	# test archive type inference
	tasks.archive -t lipsum.gz;
	tasks.archive -t lipsum.tar.gz;
	tasks.archive -t lipsum.tar;
	tasks.archive -t lipsum.bz2;
	tasks.archive -t lipsum.zip;
	
	tasks.archive -t target/lipsum.gz;
	tasks.archive -t target/lipsum.tar.gz;
	tasks.archive -t target/lipsum.tar;
	tasks.archive -t target/lipsum.bz2;
	tasks.archive -t target/lipsum.zip;
	
	tasks.archive -t ./target/lipsum.gz;
	
	# test with leading dashes
	tasks.archive -t -lipsum.gz;
	tasks.archive -t --lipsum.gz;
	
	# issues warning on redundant -d option
	# tasks.archive -t -d "$HOME/git" /etc/lipsum.zip;
	
	# FAILURES
	
	# non-existent relative path
	#tasks.archive -t ../non-existent-directory/lipsum.tar.gz;
	
	# create a .tar.gz from multiple files, specifying file extension
	tasks.archive -c lipsum.gz lipsum.txt etiam.txt;	
	
	# print the summary
	assert.summary;
}

test.archive;
exit 0;