#!/usr/bin/env bash

######################################################################
#
#	BOILERPLATE
#
######################################################################
export exedir;
function boilerplate {
	local src="${BASH_SOURCE[0]}"
	exedir="$( dirname "$src" )"
	while [ -h "$src" ]
		do 
			src="$(readlink "$src")";
			[[ $src != /* ]] && src="$exedir/$src";
			exedir="$( cd -P "$( dirname "$src"  )" && pwd )";
	done
	exedir="$( cd -P "$( dirname "$src" )" && pwd )";
	unset src;
	source "$exedir/../../lib/shared" "$@";
}
boilerplate "$@";
######################################################################

process.use 'strict';
require.once 'assert';

# let assert(3) know if this test
# is being run standalone or as
# part of a task-test(7) test suite
assert.parse "$@";

function lockfile {
	# switch on lock file usage - singleton process
	process.lock.use!;
	# assert that we have a lock file
	process.lock.file;
	assert.file.exists? "$_result";
	process.lock?;
	assert.eq "0" "$?";
	
	# switch off lock file usage
	process.lock.use! off;
	# assert that the lock file does not exist
	process.lock.file;
	assert.file.exists! "$_result";
	
	assert.summary;
}
lockfile "$@";
exit 0;