require 'executable';
require 'tasks/clean';
require 'tasks/list';
require 'tasks/doc';

function tasks.initialize {
	executable validate 'ronn' 'git';
}

# generates the man page(s) into target/man
function tasks.man.tmp {
	local ronn="${executables[ronn]}";
	local man="${target}/man";
	__man_copy;
	$ronn -w -s toc -r5 --markdown ${man}/*.ronn;
}

# generates the man page(s) into ${root}/man
function tasks.man {
	local man="${root}/man"
	local mantmp="${target}/man";	
	if [ ! -d "$man" ]; then
		mkdirp "$man";
	fi
	
	# generate man pages
	tasks.man.tmp;
	
	# clean any existing man pages
	rm -fv "${man}/*";

	# copy over man pages
	local i cmd;
	for i in {1..8}
		do
			cmd="cp -v "${mantmp}/*.${i}" "${man}"";
			eval $cmd > /dev/null 2>&1;
	done
	return 0;
}

# generates the man page documentation
# and attempts to push the gh-pages branch
# before switching back to develop
function tasks.man.publish {
	local ronn="${executables[ronn]}";
	local git="${executables[git]}";
	local man="${target}/man";
	
	__man_copy;
	
	# check out the gh-pages branch
	$git checkout gh-pages > /dev/null 2>&1 || quit 1 "could not checkout gh-pages branch, may be dirty";
	
	$ronn -w -s toc -r5 --markdown ${man}/*.ronn;
	
	# copy over the temporary man pages
	cmd="cp -fv "${man}/*" "${root}"";
	cd "${root}" \
		&& rm -fv ./*.html \
		&& eval "$cmd" \
		&& $git add . \
		&& $git commit -a -m "doc rebuild" \
		&& $git ls-files \
		&& $git push origin gh-pages \
		|| { $git checkout develop && quit 1 "could not rebuild docs"; };
	
	# switch back to the develop branch
	$git checkout develop;
}

######################################################################
#
#	PRIVATE METHODS
#
######################################################################
function __man_copy {
	local man="${target}/man";
	mkdirp "$man";
	
	# copy all source .ronn to target/man
	local cmd="cp "${root}/doc/*.ronn" "${man}"";
	eval "$cmd";
	
	# also copy the index.* files over
	eval "cp "${root}/doc/index.*" "${man}"";
}