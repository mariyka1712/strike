require 'tasks/deploy';

# tasks we want to use/test
require 'tasks/archive';
require 'tasks/todo';
require 'tasks/compress';
require 'tasks/latex';
# task-devel(7) depends upon
# task-project(7) so it is
# automatically available
require 'tasks/devel';

# external build tool wrappers
# used for testing purposes
require 'tasks/ext/build/make';
require 'tasks/ext/build/rake';
require 'tasks/ext/build/ant';
require 'tasks/ext/build/mvn';

require 'tasks/ext/npm';

# exclude these tasks from the default test runner
# this test is used to force failure
tdd.suite.exclude! "task-test";
# this test is slow and should be run manually
tdd.suite.exclude! "jsonlint";

# exclude binary files that are not tests
tdd.suite.exclude! "profile.sh";
tdd.suite.exclude! "global.sh";
tdd.suite.exclude! "custom-install.sh";

tasks.auto() {
	autoreconf;
	#./configure && make;
	./configure # && make && make install;
}

function tasks.json.checker.compile {
	executable.validate gcc;
	local exename="jsoncheck";
	"${executables[gcc]}" lib/json-checker/*.c lib/json-checker/*.h -o "target/$exename" \
		|| quit 1 "could not compile json-checker source";
}

# test module delegation
# tasks.module_delegate_test() {
# 	tasks.module delegate "$@";
# }
