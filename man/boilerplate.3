.\" generated with Ronn/v0.7.3
.\" http://github.com/rtomayko/ronn/tree/0.7.3
.
.TH "BOILERPLATE" "3" "February 2013" "" ""
.
.SH "NAME"
\fBboilerplate\fR \- boilerplate for strike(1)
.
.SH "SYNOPSIS"
Before using the strike(1) modules and functions you need to include some boilerplate code which is responsible for determining the filesystem path to the executable (including resolving symbolic links)\.
.
.SH "CODE"
If you have installed the \fBstrike\fR library as a node module and your executable is in a \fBbin\fR directory (sibling of the \fBnode_modules\fR directory) the boilerplate would look like:
.
.IP "" 4
.
.nf

export exedir;
boilerplate() {
    local src="${BASH_SOURCE[0]}"
    exedir="$( dirname "$src" )"
    while [ \-h "$src" ]
        do
            src="$(readlink "$src")";
            [[ $src != /* ]] && src="$exedir/$src";
            exedir="$( cd \-P "$( dirname "$src"  )" && pwd )";
    done
    exedir="$( cd \-P "$( dirname "$src" )" && pwd )";
    unset src;
    source "$exedir/\.\./node_modules/strike/lib/shared" "$@";
}
boilerplate "$@";
.
.fi
.
.IP "" 0
.
.P
If your executable is in the \fB${root}\fR of the project you can change the \fBsource\fR line to:
.
.IP "" 4
.
.nf

source "$exedir/node_modules/strike/lib/shared" "$@";
.
.fi
.
.IP "" 0
.
.SH "COPYRIGHT"
\fBboilerplate\fR is copyright (c) 2012 muji \fIhttp://xpm\.io\fR
.
.SH "SEE ALSO"
strike(1)
