#!/usr/bin/env bash

set -o errtrace;
set -o errexit;
set -o nounset;

######################################################################
#
#	BOILERPLATE
#
######################################################################
export PROGRAM_NAME=`basename $0`;
program_config_print_welcome="off";
program_config_print_prefix="off";
name=`basename $0`;
abspath=$(cd ${BASH_SOURCE[0]%/*} && echo $PWD/${0##*/});
if [ -L "$abspath" ]; then
	abspath=`readlink $abspath`;
fi
exedir=`dirname "$abspath"`;
libdir="$exedir/../lib";
######################################################################

source "$libdir/shared";

# test that re-requiring doesn't override previous data

# require 'executable';
# executable validate curl;
# echo "curl : ${executables[curl]}"
# require 'executable';
# echo "curl after re-require : ${executables[curl]}"
# exit 0;

#method_start_diff;
require 'options';
#method_end_diff;
require 'rest';

#method_list;

#require_list;

options_minimum=2;
#options_fail_help=1;
options_expects_command=( get post put delete options );
options_map_command_method=1;

function options_parse {
	while [ "${1:-}" != "" ]; do
		case $1 in
		-h | --help )
			program_help;
			exit 0;
			;;
		* )
			program_help;
			exit 1;
		esac
		shift;
	done
}

#configure all the option defaults
options configure;

#now validate on remaining options
options validate "$@";

#validate the parameters
#options parse "$@";

array_pop "$@";
echo "got pop: $_result";
#echo "after pop length $#";

main "${module:-}" "${options_command_method:-}" "${module_options[@]:-}";

exit 0;