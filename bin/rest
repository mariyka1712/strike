#!/usr/bin/env bash

set -o errtrace;
set -o errexit;
set -o nounset;

######################################################################
#
#	BOILERPLATE
#
######################################################################
export PROGRAM_NAME=`basename $0`;
program_config_print_welcome="off";
program_config_print_prefix="off";
name=`basename $0`;
abspath=$(cd ${BASH_SOURCE[0]%/*} && echo $PWD/${0##*/});
if [ -L "$abspath" ]; then
	abspath=`readlink $abspath`;
fi
exedir=`dirname "$abspath"`;
libdir="$exedir/../lib";
source "$libdir/shared";
######################################################################

# test that re-requiring doesn't override previous data

# require 'executable';
# executable validate curl;
# echo "curl : ${executables[curl]}"
# require 'executable';
# echo "curl after re-require : ${executables[curl]}"
# exit 0;

# set up the main delegate module as 'rest'
module="$PROGRAM_NAME";

#method_start_diff;
require 'options';
#method_end_diff;
require 'rest';

#switch on strict mode for http requests
#forces the program to quit if curl exits with a non-zero
#exit code
http_strict="on";

#options add flag "v" "verbose" 'verbose program output';

# module.method() {
# 	echo "module.method"
# }
# 
# module.method;
# 
# #method.remove module.method;
# 
# module.method;

#exit 0;

# #variable_set "mytest" "myvalue";
# 
# #variable_get "mytest";
# #echo "mytest: $_result";
# 
# variable_declare "mytest_1" "myvalue" "agx";
# 
# variable_get "mytest_1";
# echo "mytest: $_result";
# 
# # TODO: get this to work more dynamically
# #variable_unset "mytest";
# 
# exit 0;

#arr1=( 1 2 3 );
#arr2=( arr1=${arr1[*]} );
#test1=arr2[*];

#method_list;

#require_list;

# arr=();
# #declare -p "arrb" 2> /dev/null | grep -q 'declare \-a';
# 
# variable_is_array "arr";
# echo "response: $_result";
# exit 0;

options_minimum=1;
#options_fail_help=1;
options_expects_command=( get post put delete options clean redo );
options_map_command_method=1;

#map the last option to the rest_request_url variable
options_map_last="rest_request_url";

#configure all the option defaults
options configure;

#parse the parameters
options parse "$@";

# parse custom program options
rest options.parse "$@";

function rest.query.string() {
	url.params.stringify;
	params="$_result";
	if [ ! -z "$params" ]; then
		rest_request_url="${rest_request_url}${params}";
	fi
}

# append any query string parameters
# to the request url
rest.query.string;

#always add the url as the last option
module_options+=( "$rest_request_url" );

main "${module:-}" "${options_command_method:-}" "${module_options[@]:-}";

exit 0;