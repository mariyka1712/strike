#!/usr/bin/env bash

######################################################################
#
#	BOILERPLATE
#
######################################################################
export PROGRAM_NAME=`basename $0`;
program_config_print_welcome="off";
program_config_print_prefix="off";
name=`basename $0`;
abspath=$(cd ${BASH_SOURCE[0]%/*} && echo $PWD/${0##*/});
if [ -L "$abspath" ]; then
	abspath=`readlink $abspath`;
fi
exedir=`dirname "$abspath"`;
libdir="$exedir/../lib";
######################################################################

testdir="$exedir/../test";

export PROGRAM_NAME="test-runner";

#bring in the shared libraries
source "$libdir/shared";

require 'test';

#if [ -t 1 ]; then
#	echo "IS TERMINAL";
#fi

#bar="variable";
#var="this is a messages with spaces and a $bar";
#echo "$var";

#usage "this is a %s message %s" "usage" "'for you'";
#usage_description "this is a %s message %s" "description" "'for you'";
#info "this is a %s message %s" "info" 'for you';
#warn "this is a %s warning %s" "strong" "'for you'";
#error "this is a %s error %s" "bad" "'for you'";
#quit 1 "this is a %s error %s" "fatal" "'for you'";
#success "this is a %s message %s" "success" "'for you'";
#exit;

#info "-h";
#exit;

test_runner_dir $testdir;

#usage "this %s a %s" "is" "test";

#get_git_commit_message;
#echo "git message: $_result";

#get_git_commit_message "initial commit";
#echo "custom git message: $_result";

#git_test_dir="/Users/cyberfunk/Desktop/git-test";
#rmdir "$git_test_dir";
#mkdirp "$git_test_dir";

#git_repository "$git_test_dir";
#git_init "$git_test_dir";
#echo "$RANDOM" > "$git_test_dir/test-file";
#git_status "$git_test_dir";
#echo "git status after add is $?";
#touch "$git_test_dir/log-file.log";
#touch "$git_test_dir/pid-file.pid";
#git_ignore "$git_test_dir" "*.log" "*.pid";
#git_add "$git_test_dir";
#git_commit "$git_test_dir" "initial commit";
#echo "git status after commit is $?";
#git_submodule_add "$git_test_dir" "$LIBRARY_REPO" "$LIBRARY_SUBMODULE_REPO_PATH";
#git_add "$git_test_dir";
#git_commit "$git_test_dir" "added library sub-module";

#result=`git ls-remote --tags git@github.com:stax/server.git`;
#echo "git remote tag list $result : $?";

#result=`git ls-remote --tags git@github.com:stax/stack.git`;
#echo "git remote tag list $result : $?";

#git_ls_remote_tags "git@github.com:stax/server.git";
#echo "got remote tags: $_result";
#git_find_tag "dev-0.0.1" "$_result";

#TODO: ensure this actually checks that all tests passed
if [ $? -eq 0 ]; then
	success "tests in %s passed" "$testdir";
fi

quit 1 "tests in %s failed" "$testdir";