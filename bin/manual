#!/usr/bin/env bash

######################################################################
#
#	BOILERPLATE
#
######################################################################
export exedir;
boilerplate() {
	local src="${BASH_SOURCE[0]}"
	exedir="$( dirname "$src" )"
	while [ -h "$src" ]
		do 
			src="$(readlink "$src")";
			[[ $src != /* ]] && src="$exedir/$src";
			exedir="$( cd -P "$( dirname "$src"  )" && pwd )";
	done
	exedir="$( cd -P "$( dirname "$src" )" && pwd )";
	unset src;
	. "$exedir/../lib/shared" "$@";
}
boilerplate "$@";
######################################################################

process.use strict;

require 'opts/version';
version.parse "$@";

executable.validate man fmt;

console header;
console title "%s %s" "${process_name}" "${version}";
console title "";
console title "Type %s or %s for command information" "?" "help";
console title "Type %s, %s or %s to exit the program" "q" "quit" "exit";
console title "Use the %s key for completion on available man pages" "tab";
console header;

# COMMANDS

declare -Ag command_help;
command_help[help]="Show command help";
command_help[ls]="List available man pages";


declare -Ag command_aliases;
command_aliases[help]="? | help";

# display help
manual.commands.help() {
  printf "\n";
  console print "%s %s" "${process_name}" "${version}";
  printf "\n";
  local k v;
  for k in "${!command_help[@]}"
    do
      v="${command_help[$k]}";
      if [ -n "${command_aliases[$k]:-}"  ]; then
        k="${command_aliases[$k]}";
      fi
      console print --color=always "\t%s" "${k}" | expand -t 2;
      printf "\t\t${v}" | expand -t 2 |  fmt;
      printf "\n";
  done
}

manual.commands.build() {
  require.once 'tasks/doc';
}

manual.commands.ls() {
  local pages="${process_dirs[man]}";
  ls "${pages}";
}

# INTERNAL

# handle completion
manual.completion() {
	local cur="${COMP_WORDS[$COMP_CWORD]}";
  local pages="${process_dirs[man]}";
  local files=( $(ls "${pages}") );
	COMPREPLY=( $( compgen -o "default" -W "${files[*]}" -- "$cur" ) );
}

# handle input
manual.response() {
  #echo "got response $*"
  local namespace="manual.commands";
  local help=( ? help );
  local input="${1:-}";
  local words=( $input );
  if [ -z "${input}" ]; then
    return 1;
  fi
  local pages="${process_dirs[man]}";
  local page="${pages}/${input}";
  # prefer showing man pages first
  if [ -f "${page}" ]; then
    man "${page}";
  fi
  # handle help
  if array.contains? "${input}" "${help[@]}"; then
    manual.commands.help;
  else
    if [ ${#words[@]} -gt 0 ]; then
      local cmd="${namespace}.${words[0]}";
      if method.exists? "${cmd}";then
        "$cmd";
      fi
    fi
  fi
}

# show the prompt
manual() {
	local hist_file=~/.manual.history.log;
	local opts=(
		--response=manual.response
		--hist-file="$hist_file"
	);
  prompt line --response=manual.response \
    --complete=manual.completion \
    --multiline --quit="q quit exit" \
    --infinite;
}

manual;
