.\" generated with Ronn/v0.7.3
.\" http://github.com/rtomayko/ronn/tree/0.7.3
.
.TH "REST" "1" "December 2012" "" ""
.
.SH "NAME"
\fBrest\fR \- generate HTTP(S) requests
.
.SH "SYNOPSIS"
\fBrest\fR command [\fIoptions\fR\.\.\.] \fIurl\fR
.
.br
.
.SH "DESCRIPTION"
\fBrest\fR generates HTTP(S) requests using the http(1) module which wraps curl(1)\. The core commands correspond to the HTTP verbs GET, POST, PUT, HEAD, DELETE and OPTIONS\.
.
.SH "FILES"
The http(1) module generates some temporary files and files used for logging purposes and command persistence\.
.
.SH "COMMANDS"
The rest(1) program expects the first option to be a command, below is the list of available commands:
.
.TP
\fBget\fR
Perform a GET request:
.
.IP
\fBrest get google\.com\fR
.
.TP
\fBhead\fR
Perform a HEAD request:
.
.IP
\fBrest head google\.com\fR
.
.IP
Note that this command does not use the \fB\-\-request HEAD\fR option as curl(1) tends to hang when using the HEAD verb, instead this command uses the \fB\-\-head\fR option along with a GET request method\.
.
.TP
\fBpost\fR
Perform a POST request:
.
.IP
\fBrest post \-\-json \'{"name":"value"}\' google\.com\fR
.
.TP
\fBput\fR
Perform a PUT request:
.
.IP
\fBrest put \-\-json \'{"name":"value"}\' google\.com\fR
.
.TP
\fBdelete\fR
Perform a DELETE request:
.
.IP
\fBrest delete google\.com\fR
.
.TP
\fBdl\fR
Download a file:
.
.IP
\fBrest dl google\.com/index\.html\fR
.
.TP
\fBredo\fR
Repeat the last request:
.
.IP
\fBrest redo\fR
.
.TP
\fBload\fR \fB<name>\fR
Loads and executes a previously saved configuration file:
.
.IP
\fBrest get \-\-save google google\.com\fR
.
.br
\fBrest load google\fR
.
.TP
\fBclean\fR
Remove files generated by the last request:
.
.IP
\fBrest clean\fR
.
.TP
\fBconfig\fR
Print the contents of the \fBhttp\.config\fR file:
.
.IP
\fBrest config\fR
.
.SH "OPTIONS"
Wherever possible \fBrest\fR follows the command line options available to curl(1) but also adds some convenient shortcut options\.
.
.TP
\fB\-\-type\fR
Set the content type for the request\.
.
.TP
\fB\-H\fR, \fB\-\-header\fR
Set a request header\.
.
.TP
\fB\-d\fR, \fB\-\-data\fR
Data to send with the request, see curl(1) for more information\.
.
.TP
\fB\-\-json\fR
Sends data using the \fB\-\-data\-binary\fR option and adds a \fIcontent\-type\fR of \fBapplication/json\fR\.
.
.TP
\fB\-\-xml\fR
Sends data using the \fB\-\-data\-binary\fR option and adds a \fIcontent\-type\fR of \fBtext/xml\fR\.
.
.TP
\fB\-\-param\fR \fB<name>\fR \fB<value>\fR
Add a URL query string parameter, repeatable\. The \fB<value>\fR should \fInot\fR be URL\-encoded\.
.
.TP
\fB\-\-save\fR \fB<name>\fR
Saves a configuration file into \fB\.http/config\fR with the specified name\. This configuration file may then later be executed using the \fBload\fR command\.
.
.SS "PRINT OPTIONS"
The \fB\-\-print\-*\fR options control what is output after a request has been made\.
.
.TP
\fB\-\-print\-body\fR
Print the body of the response\.
.
.TP
\fB\-\-print\-headers\fR
Print all response headers\.
.
.TP
\fB\-\-print\-env\fR
Print all \fBhttp_*\fR variables\. This print output option outputs the variables in a \fBname=value\fR format with the values quoted using printf(1)\. This allows redirection of this output to a file that could later be included using source(1)\. For example:
.
.IP
rest get \-\-print\-env google\.com > http\.vars; source http\.vars;
.
.SH "BUGS"
\fBrest\fR is written in bash and depends upon \fBbash\fR >= 4\.
.
.TP
\fB\-\-print\-env\fR
The output of this option does not output array values correctly, only the first array entry is available\.
.
.SH "COPYRIGHT"
\fBrest\fR is copyright (c) 2012 muji \fIhttp://xpm\.io\fR
.
.SH "SEE ALSO"
curl(1)
