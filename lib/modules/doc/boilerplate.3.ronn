boilerplate(3) -- boilerplate for strike(1)
=============================================

## SYNOPSIS

Before using the strike(1) modules and functions you need to include some boilerplate code which is responsible for determining the filesystem path to the executable (including resolving symbolic links).

## CODE

If you have installed the `strike` library as a node module and your executable is in a `bin` directory (sibling of the `node_modules` directory) the boilerplate would look like:

	declare -gx exedir;
	function boilerplate {
		local src="${BASH_SOURCE[0]}"
		exedir="$( dirname "$src" )"
		while [ -h "$src" ]
			do 
				src="$(readlink "$src")";
				[[ $src != /* ]] && src="$exedir/$src";
				exedir="$( cd -P "$( dirname "$src"  )" && pwd )";
		done
		exedir="$( cd -P "$( dirname "$src" )" && pwd )";
		unset src;
		source "$exedir/../node_modules/strike/lib/shared" "$@";
	}
	boilerplate "$@";
	
If your executable is in the `${root}` of the project you can change the `source` line to:

	source "$exedir/node_modules/strike/lib/shared" "$@";

## COPYRIGHT

**boilerplate** is copyright (c) 2012 muji <http://xpm.io>

## SEE ALSO

strike(1)