function variable.get {
	local name="$1";
	set +o nounset;
	#array.is.array? "$name";
	#local isarray="$_result";
	if array.is.array?; then
		eval value=\${"$name"[@]};
	else
		eval value="$"$name;
	fi
	_result="$value";
	set -o nounset;
}

function variable.set {
	local name="$1";
	local value="$2";
	
	#echo "variable.set: $name : $value";
	
	eval "$name"="'$value'";
	
	#variable.get "$name";
	#echo "$_result";
}

function variable_declare {
	local name="$1";
	local value="$2";
	local options="${3:-}";
	if [ ! -z "$options" ]; then
		options="-${options}";
	fi
	local expression="declare $options $name";
	eval $expression;
	variable.set "$name" "$value";
	
	#echo "variable_declare: $name";
}

# TODO: implement
function variable_unset {
	local prefix="$1";
	local expression="\${!${prefix}_*}";
	local opt;
	for opt in "$expression"
		do
			unset "$opt";
	done
}

#            | unset |   set    | set and  | meaning
#             |       | but null | not null |
# ============+=======+==========+==========+=============================
#  ${var-_}   |   T   |     F    |    T     | not null or not set
# ------------+-------+----------+----------+-----------------------------
#  ${var:-_}  |   T   |     T    |    T     | always true, use for subst.
# ------------+-------+----------+----------+-----------------------------
#  $var       |   F   |     F    |    T     | var is set and not null
# ------------+-------+----------+----------+-----------------------------
#  ${!var[@]} |   F   |     T    |    T     | var is set

function variable.exists? {
	echo "variable.exists?"
}