# Script generation methods for task-deploy(7)

:tasks.deploy.script.write!() {
	# delete any existing deploy script
	if [ -f "${script}" ]; then
		rm "${script}" \
			|| :tasks.deploy.fail "could not delete %s" "${script}";
	fi

	touch "${script}" \
		|| :tasks.deploy.fail "could not create %s" "${script}";
	
	# custom script file specified
	if [ -n "${script_source}" ]; then
		cat "${script_source}" >| "${script}";
	else
		:tasks.deploy.script.header.write!;
		:tasks.deploy.script.common.write!;
		:tasks.deploy.script.footer.write!;
	fi

	chmod +x "${script}" \
		|| :tasks.deploy.fail "could not set permissions on %s" "${script}";	
	if $dump_script; then
		cat "${script}";
	fi
}

# run script through `checkbashisms`
:tasks.deploy.script.lint() {
	executable.validate checkbashisms;
	
	console.info "lint %s" "${script}";
	
	local valid=1;
	# utility to verify the script is not bash only
	checkbashisms "${script}";
	valid=$?;
	if [ $valid -eq 0 ]; then
 		console.info "%s %s" "$script" "${characters[tick]}";
	else
 		:tasks.deploy.fail "%s %s" "$script" "${characters[cross]}";
	fi
	
	# run script locally
	# "${script}";
	
	console.success;
}

# write the script header
:tasks.deploy.script.header.write!() {
cat <<EOF >> "${script}"
${shebang}

# generated by task-deploy(7)
# do not edit this file manually
# use bake(1) with task-deploy(7)

# date: $( date )
# script: ${script_name}
# file: ${script}
# name: ${project_name}
# version: ${project_version}
# profile: ${profile}
# type: ${type}
# local: ${deploy_local}
# flat: ${flat}
# include version: ${include_version}
# staging: ${staging}
# directory: ${directory}
# target: ${deploy_target}

set +e;

# global variables
log_dir="${log_dir}"; export log_dir;
log_file="${log_file}"; export log_file;
EOF
}

# write the script commands shared by all
# deployment types
:tasks.deploy.script.common.write!() {
cat <<EOF >> "${script}"

# quit on failure
quit() {
	printf "$@";
	exit 1;
}

# set up the log file
log() {
	echo "\$log_dir";
	echo "\$log_file";
	# create the log directory
	if ! test -d $log_dir; then
		printf "creating %s\n" "$log_dir";
		mkdir -p ${log_dir} \\
			|| { echo "could not create $log_dir"; exit 1; }
	fi
	if test -f $log_file; then
		rm $log_file \\
			|| { echo "could not remove log file $log_file"; exit 1; }
	fi
	# create the log file
	printf "creating %s\n" "$log_file";
	touch $log_file \\
		|| { echo "could not create log file $log_file"; exit 1; }
}
EOF
}

# write the script footer
:tasks.deploy.script.footer.write!() {
cat <<EOF >> "${script}"

# check for an executable that
# matches the deployment type
binary=\$( command -v "$type" );
if [ -z "\$binary" ]; then
	quit "%s is not installed" "\$binary";
fi

deploy() {
	log;
}
deploy "\$@";
EOF
}