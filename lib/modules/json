: <<'ronn:markdown'
json(3) -- JSON manipulation
=============================================

## SYNOPSIS

An experimental module for parsing and stringifying JSON data.

## DESCRIPTION

The json(3) module adds methods for parsing and creating JSON documents.

## USAGE

Parsing JSON data can be from a file, string or variable. After parsing the JSON data the parsed data is available on the global `json_doc` associative array. Use the `json.print` method to quickly inspect the contents of the parsed data.

	require 'json';
	
	# parse a json document
	json.parse < "${process_dirs[root]}/package.json";
	json.print;
	
	# parse a json string
	json.parse <<< '{ "data": "value" }';
	json.print;
	
	# clean up parsed json data
	json.clean;
	
Converting to JSON is achieved using references to variable names and afterwards the JSON string is available in the global `json_str` variable. Use the `json.string` method to print the JSON string data.

	require 'json';

	toJSON() {
		declare -A doc;
		doc[key]="value";
		doc[greeting]="hello world";
		# doc is the *name* of the variable to stringify
		json.stringify <<< "doc";
		# print the result
		json.string;
	}
	toJSON;

## BUGS

**json** is written in bash and depends upon `bash` >= 4.

The json(3) module is derived from json-sh(1).

## COPYRIGHT

**json** is copyright (c) 2012 muji <http://xpm.io>

## SEE ALSO

strike(7)
ronn:markdown

require.once json.parse;
require.once json.stringify;

# cleans all global data set by
# json.parse and json.stringify
function json.clean {
	json.parse.clean;
	json.stringify.clean;
}

# prints key/value pairs from the last call
# to json.parse
function json.print {
	local key val;
	for key in "${!json_doc[@]}"
		do
			val="${json_doc["$key"]}";
			console.log "${key}=${val}";
	done
}

# prints the string value from
# the last call to json.stringify
function json.string {
	# NOTE: do not use console.log
	# NOTE: as it calls printf which changes quoting
	# NOTE: and escape sequences
	# NOTE: additionally do NOT specift the -e option
	# NOTE: to echo, otherwise quoting will not work
	echo -n "${json_str:-}";
}