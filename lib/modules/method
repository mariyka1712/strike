######################################################################
#	Removes a method definition.
#
#	$1	The name of the method.
######################################################################
function method.remove {
	unset -f "$1";
}

######################################################################
#	Determines whether a method exists.
#
#	$1	The name of the method.
######################################################################
function method.exists? {
	local method="$1";
	#echo "testing method $method"
	declare -f -F "$method" > /dev/null;
	return $?;
}


######################################################################
#	Lists all function names.
######################################################################
function method.list {
	local methods=$( declare -f -F );
	while read decl func name
		do
			echo "$name";
	done <<< "$methods";
}

######################################################################
#	Lists all function names, line numbers and source file paths.
######################################################################
function method.list.verbose {
	local m;
	local methods=( $( method.list ) );
	for m in ${methods[@]}
		do
			# turn on extended shell debugging			
			shopt -s extdebug;
			declare -F "$m";
			# turn off extended shell debugging
			shopt -u extdebug;
	done
}

######################################################################
#	Determines whether a method has been declared.
######################################################################
function __method_exists {
	local method="$1";
	#echo "testing method $method"
	declare -f -F "$method" > /dev/null;
	return $?;
}