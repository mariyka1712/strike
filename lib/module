######################################################################
# 	module
#
#	Logic for defining and loading modules.
######################################################################

declare -a modules;

function require {
	local name="${1:-}";
	if [ ! -z "$name" ]; then
		modules=( "${modules[@]:-""}" "$name" );
		module_load "$name";
	fi
}

function module_list {
	for m in "${modules[@]}"
		do
			if [ ! -z "$m" ]; then
				echo "[module] $m";
			fi
	done
}

function module_load {
	local name="${1:-}";
	
	local abspath=$(cd ${BASH_SOURCE[0]%/*} && echo $PWD);
	
	echo "got load abs path: $abspath";
	
	local searchpaths=(
		"$exedir/lib/modules"
		"./node_modules"
		"../node_modules"
		"$exedir/../lib/modules"
		"$abspath/modules"
	);
	
	if [ ! -z "$name" ]; then
		local abs;
		local loaded=0;
		for f in ${searchpaths[@]}
			do
				expand_path "$f" > /dev/null;
				f="$_result";
				abs="${f}/${name}";
				echo "got module path $abs";
				
				if [ -f "$abs" ] && [ -r "$abs" ]; then
					source "$abs";
					loaded=1;
					break;
				fi
		done
		
		if [ $loaded -eq 0 ]; then
			quit 1 "failed to load module %s" "$name";
		fi
		
		strict_method_exists "$name";
		local exists=$?;
		set -o errexit;
		if [ $exists -ne 0 ]; then
			warn "loaded module %s does not declare a method named %s" "$name" "$name";
		fi
		
		strict_method_exists "${name}_initialize";
		exists=$?;
		set -o errexit;		
		if [ $exists -eq 0 ]; then
			"${name}_initialize";
		fi		
	fi
}

require 'couchdb';
#module_list;